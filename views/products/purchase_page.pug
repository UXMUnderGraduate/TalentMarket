extends ../layout
block content
    .container-fluid
    .row
        .col-md-12
            #grid
                h1(style='font-size:55px;display:flex;justify-content:center;') 결제 창
    .row
        br
    .row(style="margin-top:100px")
        .col-md-3
        
        .col-md-6(style="border:1px solid gray")
            .container(style="display:grid;")
                .row(style="padding-top:20px; padding-bottom:20px;")
                    img.col-md-4.fluid(src= product.img)
                    form(action=`/products/purchase/${product._id}`, method='POST')
                        .col-md-8(style="padding-left:100px; padding-top:25px;")
                            table
                                tbody
                                    tr
                                        th 판매자
                                        th 상품명
                                        th 가격
                                        th 소요시간
                                    tr
                                        td= seller.name
                                        td= product.title
                                        td= product.price
                                        td= product.requireTime
                        button.btn(type='sumbit' ,style='color:white; margin-top:20px; width:70px;background:blue; float:right;') 구매
        //-todo 여기에 metamask, web3 연결
        .col-md-3
        //- form(action=`/web3` method="POST")
        //-     button(type=submit)
        //- p= value
        
        button.btn(id='meta') 메타마스크 연습
        button.btn(id='web3') web 연결 테스트 돈보내기
        button.btn(id='test') web 거래 승인
        h1#text
    //- script(src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@1.0.0-beta.36/dist/web3.min.js")
    script.
        var userAccount;
        var myContract;
        var accounts;
        var web3
        var abi =[
            {
                "constant": true,
                "inputs": [],
                "name": "get",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "x",
                        "type": "uint256"
                    }
                ],
                "name": "set",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ];

        window.addEventListener('load', function() {

        // Web3가 브라우저에 주입되었는지 확인(Mist/MetaMask)
        if (typeof web3 !== 'undefined') {
            // Mist/MetaMask의 프로바이더 사용
            web3js = new Web3(web3.currentProvider);
        } else {
            // 사용자가 Metamask를 설치하지 않은 경우에 대해 처리
            // 사용자들에게 Metamask를 설치하라는 등의 메세지를 보여줄 것
        }

        // 이제 자네 앱을 시작하고 web3에 자유롭게 접근할 수 있네:
        startApp();
        })

        async function account() {
            try {
                accounts = await ethereum.send('eth_requestAccounts');
            }catch (error) {
                if (error.code === 4001) {
                    console.log('s');
                }else {
                    console.error(error);
                }
            };
        }
        function startApp() {
            var contractAddress = "0x78eEED0bF67fE27a27BedCD85c96A9Dc80C5e8da";
            myContract = new web3js.eth.Contract(abi, contractAddress);
            console.log(myContract);
        }

        document.getElementById('web3').addEventListener('click', function() {
            let value = myContract.methods.get().call().then(console.log);
            
        })

        document.getElementById('test').addEventListener('click', function() {
            web3.eth.sendTransaction({
                from: web3.eth.accounts[0],
                to: '0x19f298E51290D47363f1d58cB56F190aa3343c6E',
                value: '0x00'
            }, function(error, hash){
                });
        })


